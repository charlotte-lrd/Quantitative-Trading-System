{"remainingRequest":"D:\\UPenn大三下\\Quantitative-Trading-System\\Framework\\Frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\UPenn大三下\\Quantitative-Trading-System\\Framework\\Frontend\\node_modules\\eslint-loader\\index.js??ref--14-0!D:\\UPenn大三下\\Quantitative-Trading-System\\Framework\\Frontend\\src\\store\\index.js","dependencies":[{"path":"D:\\UPenn大三下\\Quantitative-Trading-System\\Framework\\Frontend\\src\\store\\index.js","mtime":1681689646023},{"path":"D:\\UPenn大三下\\Quantitative-Trading-System\\Framework\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681689632845},{"path":"D:\\UPenn大三下\\Quantitative-Trading-System\\Framework\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1681689632610},{"path":"D:\\UPenn大三下\\Quantitative-Trading-System\\Framework\\Frontend\\node_modules\\eslint-loader\\index.js","mtime":1681689637309}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlU3RvcmUgfSBmcm9tICd2dWV4JzsKaW1wb3J0ICogYXMgZDMgZnJvbSAiZDMiOwpleHBvcnQgZGVmYXVsdCBjcmVhdGVTdG9yZSh7CiAgc3RhdGU6IHsKICAgIGRhdGFzZXQ6IFtdLAogICAgYmVsbDogMAogIH0sCiAgZ2V0dGVyczogewogICAgLyogRGVmaW5lIGhvdyBkaWZmZXJlbnQgdmlld3MgYWNjZXNzIHRoZSBnbG9iYWwgZGF0YS4gKi8KICAgIGRhdGFzZXQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmRhdGFzZXQ7CiAgICB9LAoKICAgIHJlYWxtKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5kYXRhc2V0LmZpbHRlcih2ID0+IHYuc2VsZWN0ZWQpOwogICAgfSwKCiAgICBmb2N1cyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZGF0YXNldC5maWx0ZXIodiA9PiB2LmdyYW5kZmF0aGVyZWQpOwogICAgfSwKCiAgICBiZWxsKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5iZWxsOwogICAgfQoKICB9LAogIG11dGF0aW9uczogewogICAgLyogQ2hhbmdlIHN0YXRlIHZhbHVlICovCiAgICB1cGRhdGUoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGVbcGF5bG9hZC5maWVsZF0gPSBwYXlsb2FkLmRhdGE7CiAgICB9LAoKICAgIHNpbXBsZU5vdGlmeShzdGF0ZSkgewogICAgICBzdGF0ZS5iZWxsKys7CiAgICB9CgogIH0sCiAgYWN0aW9uczogewogICAgLyogSW52b2tlIGZ1bmN0aW9uczsgb25seSBmdW5jdGlvbnMgaGVyZSBjYW4gdXNlIG11dGF0aW9ucyAqLwogICAgYXN5bmMgZ2V0U2NhdHRlckRhdGFzZXQoY29udGV4dCkgewogICAgICBhd2FpdCBkMy5qc29uKCcuL2RhdGFzZXQvZG90X2RhdGEuanNvbicpLnRoZW4oZnVuY3Rpb24gKGQpIHsKICAgICAgICBjb250ZXh0LmNvbW1pdCgndXBkYXRlJywgewogICAgICAgICAgZmllbGQ6ICdkYXRhc2V0JywKICAgICAgICAgIGRhdGE6IGQKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAoKICAgIG5vdGlmeShjb250ZXh0KSB7CiAgICAgIGNvbnRleHQuY29tbWl0KCdzaW1wbGVOb3RpZnknKTsKICAgIH0KCiAgfSwKICBtb2R1bGVzOiB7fQp9KTs="},{"version":3,"sources":["D:/UPenn大三下/Quantitative-Trading-System/Framework/Frontend/src/store/index.js"],"names":["createStore","d3","state","dataset","bell","getters","realm","filter","v","selected","focus","grandfathered","mutations","update","payload","field","data","simpleNotify","actions","getScatterDataset","context","json","then","d","commit","notify","modules"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,eAAeD,WAAW,CAAC;AACzBE,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,EADJ;AAELC,IAAAA,IAAI,EAAE;AAFD,GADkB;AAKzBC,EAAAA,OAAO,EAAC;AAAE;AACRF,IAAAA,OAAO,CAACD,KAAD,EAAQ;AACb,aAAOA,KAAK,CAACC,OAAb;AACD,KAHK;;AAING,IAAAA,KAAK,CAACJ,KAAD,EAAQ;AACX,aAAOA,KAAK,CAACC,OAAN,CAAcI,MAAd,CAAsBC,CAAD,IAAOA,CAAC,CAACC,QAA9B,CAAP;AACD,KANK;;AAONC,IAAAA,KAAK,CAACR,KAAD,EAAQ;AACX,aAAOA,KAAK,CAACC,OAAN,CAAcI,MAAd,CAAsBC,CAAD,IAAOA,CAAC,CAACG,aAA9B,CAAP;AACD,KATK;;AAUNP,IAAAA,IAAI,CAACF,KAAD,EAAQ;AACV,aAAOA,KAAK,CAACE,IAAb;AACD;;AAZK,GALiB;AAmBzBQ,EAAAA,SAAS,EAAE;AAAE;AACXC,IAAAA,MAAM,CAACX,KAAD,EAAQY,OAAR,EAAiB;AACrBZ,MAAAA,KAAK,CAACY,OAAO,CAACC,KAAT,CAAL,GAAuBD,OAAO,CAACE,IAA/B;AACD,KAHQ;;AAITC,IAAAA,YAAY,CAAEf,KAAF,EAAS;AACnBA,MAAAA,KAAK,CAACE,IAAN;AACD;;AANQ,GAnBc;AA2BzBc,EAAAA,OAAO,EAAE;AAAG;AACV,UAAMC,iBAAN,CAAwBC,OAAxB,EAAiC;AAC/B,YAAMnB,EAAE,CAACoB,IAAH,CAAQ,yBAAR,EAAmCC,IAAnC,CAAwC,UAASC,CAAT,EAAY;AACxDH,QAAAA,OAAO,CAACI,MAAR,CAAe,QAAf,EAAyB;AACvBT,UAAAA,KAAK,EAAE,SADgB;AAEvBC,UAAAA,IAAI,EAAEO;AAFiB,SAAzB;AAID,OALK,CAAN;AAMD,KARM;;AASPE,IAAAA,MAAM,CAACL,OAAD,EAAU;AACdA,MAAAA,OAAO,CAACI,MAAR,CAAe,cAAf;AACD;;AAXM,GA3BgB;AAwCzBE,EAAAA,OAAO,EAAE;AAxCgB,CAAD,CAA1B","sourcesContent":["import { createStore } from 'vuex'\r\nimport * as d3 from \"d3\"\r\nexport default createStore({\r\n  state: {\r\n    dataset: [],\r\n    bell: 0\r\n  },\r\n  getters:{ /* Define how different views access the global data. */\r\n    dataset(state) {\r\n      return state.dataset\r\n    },\r\n    realm(state) {\r\n      return state.dataset.filter((v) => v.selected)\r\n    },\r\n    focus(state) {\r\n      return state.dataset.filter((v) => v.grandfathered)\r\n    },\r\n    bell(state) {\r\n      return state.bell\r\n    }\r\n  },\r\n  mutations: { /* Change state value */\r\n    update(state, payload) {\r\n      state[payload.field] = payload.data\r\n    },\r\n    simpleNotify (state) {\r\n      state.bell ++\r\n    }\r\n  },\r\n  actions: {  /* Invoke functions; only functions here can use mutations */\r\n    async getScatterDataset(context) {\r\n      await d3.json('./dataset/dot_data.json').then(function(d) {\r\n        context.commit('update', {\r\n          field: 'dataset',\r\n          data: d\r\n        })\r\n      })\r\n    },\r\n    notify(context) {\r\n      context.commit('simpleNotify')\r\n    }\r\n  },\r\n  modules: {\r\n  }\r\n})\r\n"]}]}